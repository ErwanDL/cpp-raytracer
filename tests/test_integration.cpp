#include <catch2/catch.hpp>

#include "../src/camera.hpp"
#include "../src/image.hpp"
#include "../src/light.hpp"
#include "../src/material.hpp"
#include "../src/shape.hpp"
#include "../src/utils.hpp"
#include "../src/vectors.hpp"

TEST_CASE("Final render is unchanged") {
    constexpr int width{20};
    constexpr int height{15};

    Image img{width, height, 1.0f, 1.8f};

    PerspectiveCamera camera{
        Point3(0.0f, 1.0f, 0.0f), Vector3(0.0f, 1.0f, -1.0f),
        Vector3(0.0f, 1.0f, 0.0f), Math::PI / 6,
        static_cast<float>(width) / static_cast<float>(height)};

    Scene scene{};

    Plane floor(Point3(0.0f, 0.0f, 0.0f), Vector3(0.0f, 1.0f, 0.0f),
                Material(Color(0.3f, 0.5f, 0.3f), 0.1f, 5.0f));
    scene.addShape(&floor);

    Sphere sphere{Point3(1.0f, 2.5f, -5.0f), 0.7f,
                  Material(Color(0.5f, 0.5f, 0.8f))};
    scene.addShape(&sphere);

    LightRack lightRack{0.6f};

    PointLight light{Point3(2.0f, 4.0f, 0.0f), Color(0.5f)};
    lightRack.addLight(&light);

    auto render = img.rayTrace(camera, scene, lightRack);
    std::vector<int> expected{
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   64,  64,  148, 83,
        83,  193, 0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  34, 34,  79, 66, 66,  153, 255, 255, 255, 79,  79,
        185, 0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   29,  29, 68, 50, 50, 118, 63, 63, 146, 60,  60,  139, 0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        29,  29,  68, 34, 34, 80, 0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        0,   0,   0,  0,  0,  0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,
        8,   26,  8,  9,  26, 9,  9,   27, 9,  9,   27,  9,   9,   27,  9,   9,
        27,  9,   9,  27, 9,  9,  28,  9,  9,  28,  9,   9,   28,  9,   9,   28,
        9,   9,   28, 9,  9,  28, 9,   9,  28, 9,   9,   28,  9,   9,   28,  9,
        9,   27,  9,  9,  27, 9,  9,   27, 9,  9,   27,  9,   13,  38,  13,  14,
        39,  14,  14, 39, 14, 15, 40,  15, 15, 41,  15,  15,  42,  15,  16,  43,
        16,  16,  43, 16, 16, 44, 16,  17, 45, 17,  17,  45,  17,  17,  45,  17,
        17,  46,  17, 17, 46, 17, 17,  46, 17, 17,  45,  17,  17,  45,  17,  16,
        44,  16,  16, 44, 16, 16, 43,  16, 18, 48,  18,  19,  49,  19,  19,  50,
        19,  20,  52, 20, 20, 53, 20,  21, 54, 21,  21,  55,  21,  22,  56,  22,
        22,  57,  22, 23, 58, 23, 23,  58, 23, 23,  59,  23,  23,  59,  23,  24,
        60,  24,  24, 60, 24, 24, 60,  24, 24, 60,  24,  23,  60,  23,  23,  59,
        23,  23,  59, 23, 22, 56, 22,  22, 57, 22,  23,  58,  23,  23,  59,  23,
        24,  60,  24, 24, 61, 24, 25,  62, 25, 25,  63,  25,  25,  64,  25,  26,
        65,  26,  26, 66, 26, 26, 67,  26, 27, 67,  27,  27,  68,  27,  27,  68,
        27,  27,  68, 27, 27, 69, 27,  27, 69, 27,  27,  69,  27,  27,  68,  27,
        24,  61,  24, 25, 62, 25, 25,  63, 25, 25,  64,  25,  26,  65,  26,  26,
        66,  26,  27, 67, 27, 27, 68,  27, 27, 68,  27,  28,  69,  28,  28,  70,
        28,  28,  71, 28, 28, 71, 28,  29, 72, 29,  29,  73,  29,  29,  73,  29,
        29,  73,  29, 29, 74, 29, 29,  74, 29, 29,  74,  29,  26,  64,  26,  26,
        65,  26,  26, 66, 26, 27, 67,  27, 27, 68,  27,  27,  69,  27,  28,  69,
        28,  28,  70, 28, 28, 71, 28,  29, 72, 29,  29,  73,  29,  29,  73,  29,
        30,  74,  30, 30, 75, 30, 30,  75, 30, 30,  76,  30,  30,  76,  30,  31,
        77,  31,  31, 77, 31, 31, 77,  31, 27, 67,  27,  27,  68,  27,  27,  68,
        27,  28,  69, 28, 28, 70, 28,  28, 71, 28,  28,  71,  28,  29,  72,  29,
        29,  73,  29, 29, 74, 29, 30,  74, 30, 30,  75,  30,  30,  76,  30,  30,
        76,  30,  31, 77, 31, 31, 77,  31, 31, 78,  31,  31,  78,  31,  31,  79,
        31,  32,  79, 32,
    };

    REQUIRE(expected == render);
}